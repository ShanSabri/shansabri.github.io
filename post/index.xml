<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>https://shansabri.github.io/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Jul 2019 16:36:57 -0700</lastBuildDate>
    
	    <atom:link href="https://shansabri.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Assignment operators in R</title>
      <link>https://shansabri.github.io/post/post1/</link>
      <pubDate>Wed, 24 Jul 2019 16:36:57 -0700</pubDate>
      
      <guid>https://shansabri.github.io/post/post1/</guid>
      <description>&lt;p&gt;The operators &lt;code&gt;&amp;lt;-&lt;/code&gt; and &lt;code&gt;=&lt;/code&gt; can be used, almost interchangeably, to assign to variable in the same environment. Yet, &lt;code&gt;&amp;lt;-&lt;/code&gt; is preferred and advised in R Coding style guides from &lt;a href=&#34;https://google.github.io/styleguide/Rguide.xml#assignment&#34; target=&#34;_blank&#34;&gt;Google&lt;/a&gt; and &lt;a href=&#34;http://adv-r.had.co.nz/Style.html&#34; target=&#34;_blank&#34;&gt;Hadley&lt;/a&gt;. Some users pointed out on &lt;a href=&#34;https://twitter.com/_colinfay/status/1006139974377443328?lang=en&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt; that this makes code slightly more difficult to read if you come from another programming language. &lt;code&gt;&amp;lt;-&lt;/code&gt; is used in &lt;code&gt;F#&lt;/code&gt;, &lt;code&gt;OCaml&lt;/code&gt;, &lt;code&gt;R&lt;/code&gt; and &lt;code&gt;S&lt;/code&gt; to my knowledge. Even if &lt;code&gt;&amp;lt;-&lt;/code&gt; is generally rare in programming, I suppose its meaning is quite easy to grasp (it&amp;rsquo;s an assignment arrow). Nonetheless this led me down a rabbit hole trying to determine the functional differences with these two assignment operators.&lt;/p&gt;

&lt;p&gt;This is not just a matter of style and interpretability. There are functional consequences if assignment opperators in R are using incorrectly. R will treat &lt;code&gt;=&lt;/code&gt; as a named function argument before it will interpret it as assignment. As an example of where this makes a practical difference:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;within(data.frame(a=rnorm(2)), b = a^2) # Error
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Error in eval(substitute(expr), e): argument is missing, with no default
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;within(data.frame(a=rnorm(2)), b &amp;lt;- a^2) # Success
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##            a          b
## 1 -0.5221077 0.27259643
## 2  0.1855074 0.03441299
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or when you want to handle a possible
    exception:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tryCatch(x = runif(5)) # Error
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Error in tryCatchList(expr, classes, parentenv, handlers): argument &amp;quot;expr&amp;quot; is missing, with no default
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tryCatch(x &amp;lt;- runif(5)) # Success
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, if you use &lt;code&gt;=&lt;/code&gt; for assignment, you have to remember to treat these situations differently. Which results in your code needing extra levels of brackets/braces, or mixing &lt;code&gt;=&lt;/code&gt; and &lt;code&gt;&amp;lt;-&lt;/code&gt;. Or you could just use &lt;code&gt;&amp;lt;-&lt;/code&gt; everywhere you intend to do assignment and not worry about the edge cases. Keep in mind that this is not to be confused with the other, less common, assignment operators in R (e.g., &lt;code&gt;&amp;lt;&amp;lt;-&lt;/code&gt;, &lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;:=&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;). I&amp;rsquo;ll hold off an explanation for a future blog post.&lt;/p&gt;

&lt;p&gt;IMO, &lt;code&gt;&amp;lt;-&lt;/code&gt; adds some charm to the use of the R programming language. I take pride in it for that reason.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
